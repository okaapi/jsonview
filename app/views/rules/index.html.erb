
    <style type="text/css">
        #mynetwork {
            width: 900px;
            height: 900px;
            border: 1px solid lightgray;
        }
        #loadingBar {
            position:absolute;
            top:0px;
            left:0px;
            width: 902px;
            height: 902px;
            background-color:rgba(200,200,200,0.8);
            -webkit-transition: all 0.5s ease;
            -moz-transition: all 0.5s ease;
            -ms-transition: all 0.5s ease;
            -o-transition: all 0.5s ease;
            transition: all 0.5s ease;
            opacity:1;
        }
        #wrapper {
            position:relative;
            width:900px;
            height:900px;
        }

        #text {
            position:absolute;
            top:8px;
            left:530px;
            width:30px;
            height:50px;
            margin:auto auto auto auto;
            font-size:22px;
            color: #000000;
        }


        div.outerBorder {
            position:relative;
            top:400px;
            width:600px;
            height:44px;
            margin:auto auto auto auto;
            border:8px solid rgba(0,0,0,0.1);
            background: rgb(252,252,252); /* Old browsers */
            background: -moz-linear-gradient(top,  rgba(252,252,252,1) 0%, rgba(237,237,237,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(252,252,252,1)), color-stop(100%,rgba(237,237,237,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top,  rgba(252,252,252,1) 0%,rgba(237,237,237,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top,  rgba(252,252,252,1) 0%,rgba(237,237,237,1) 100%); /* Opera 11.10+ */
            background: -ms-linear-gradient(top,  rgba(252,252,252,1) 0%,rgba(237,237,237,1) 100%); /* IE10+ */
            background: linear-gradient(to bottom,  rgba(252,252,252,1) 0%,rgba(237,237,237,1) 100%); /* W3C */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfcfc', endColorstr='#ededed',GradientType=0 ); /* IE6-9 */
            border-radius:72px;
            box-shadow: 0px 0px 10px rgba(0,0,0,0.2);
        }

        #border {
            position:absolute;
            top:10px;
            left:10px;
            width:500px;
            height:23px;
            margin:auto auto auto auto;
            box-shadow: 0px 0px 4px rgba(0,0,0,0.2);
            border-radius:10px;
        }

        #bar {
            position:absolute;
            top:0px;
            left:0px;
            width:20px;
            height:20px;
            margin:auto auto auto auto;
            border-radius:11px;
            border:2px solid rgba(30,30,30,0.05);
            background: rgb(0, 173, 246); /* Old browsers */
            box-shadow: 2px 0px 4px rgba(0,0,0,0.4);
        }
    </style>
<table border = 0 width = 100%>
  <tr>
    <td id='rules_window' valign=top >
	  <h1> Visualize Remisol rules </h1>
	  <span style="color:red">
	    <%= truncate( ('Error: ' + @error if @error ) ) %>
	  </span>
      <%= form_tag  do %>	
	  	<%= submit_tag 'graph them!' %>
		<br><br>
		Syntax: <br>
		rulename # (logical conditions) # action1 ; action2 ; action 3		
		<br><br>		
		<%= text_area_tag 'body', @body , rows: 20, cols: 30 %>
      <% end %>	  
	  <%= form_tag '/rules', multipart: true do %>
        <br>
	    <%= file_field_tag :rulesfile %>
        <%= submit_tag 'upload!' %>
      <% end %>
    </td>
    <td >
      <div id="visualization" style="width:100%; height:700px"></div>
	  <div id="loadingBar">
	    loadingbar
        <div class="outerBorder">
            <div id="text">0%</div>
            <div id="border">
                <div id="bar"></div>
            </div>
        </div>
    </div>
    </td>
  </tr>
</table>

<script type="text/javascript">

var options = {
    nodes: {
      font: {
        size: 50
      },	
      shape: 'box',
      margin: 20,
      widthConstraint: {
        minimum: 200,
		maximum: 700
      }
    },
    edges: {
      font: {
        size: 40,
		align: 'middle'
      },
      arrows:'from'	  
    },	
  layout: {
    hierarchical: {
      enabled:true,
      levelSeparation: 1000,
      direction: 'LR',        // UD, DU, LR, RL
    }
  },
  interaction: {
           hover: false,
		   navigationButtons: true,
          keyboard: true
		},
        physics: {
            enabled: true,
            hierarchicalRepulsion: {
              nodeDistance: 200
            }
        },
		/*
        configure: {
          filter: function (option, path) {
            if (path.indexOf('hierarchical') !== -1) {
              return true;
            }
            if (path.indexOf('physics') !== -1) {
              return true;
            }
            if (path.indexOf('smooth') !== -1 || option === 'smooth') {
              return true;
            }			  
            return false;
          },
          showButton: false
        }
		*/
};

var nodes = [
<% levels = {} %>
<% @nodes.each do |node| %>
  {
    id: "<%= node['_id']  %>",
    label: "<%= truncate(node['_label']).html_safe  %>",
    title: "<%= ("<div style='color:red'>"+node['_title']+"</div>").html_safe %>",
    level: "<%= node['_level'] %>",
	color: "<%= node['_color'] %>"
  },
<% end %>
];

var edges = [
<% @links.each do |link| %>
  {
    from: "<%= link[:child] %>",
    to: "<%= link[:parent] %>", 
	label: "<%= link[:label] %>", 
    color:{ color: '#000000'}
  },
<% end %>
];
  
var container = document.getElementById('visualization');
var data = {
  nodes: nodes,
  edges: edges,
  options: options
};
var network = new vis.Network(container, data, {});

            network.on("stabilizationProgress", function(params) {
                var maxWidth = 496;
                var minWidth = 20;
                var widthFactor = params.iterations/params.total;
                var width = Math.max(minWidth,maxWidth * widthFactor);

                document.getElementById('bar').style.width = width + 'px';
                document.getElementById('text').innerHTML = Math.round(widthFactor*100) + '%';
            });
            network.once("stabilizationIterationsDone", function() {
                document.getElementById('text').innerHTML = '100%';
                document.getElementById('bar').style.width = '496px';
                document.getElementById('loadingBar').style.opacity = 0;
                // really clean the dom element
                setTimeout(function () {document.getElementById('loadingBar').style.display = 'none';}, 500);
            });
	  
</script>


